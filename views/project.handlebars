<!-- Page header -->
<div class="page-header d-print-none">
  <div class="container-xl">
    <div class="row g-2 align-items-center">
      <div class="col">
        <!-- Page pre-title -->
        <div class="page-pretitle"> Overview </div>
        <h2 class="page-title"> Showing {{data.project.name}}
        </h2>
      </div>
      <!-- Page title actions -->
      <div class="col-auto ms-auto d-print-none">
        <div class="btn-list">
          <a href="#" class="btn btn-secondary-outline d-none d-md-inline-block" onclick="toggleLayout(this)">
            <svg  xmlns="http://www.w3.org/2000/svg"  width="24"  height="24"  viewBox="0 0 24 24"  fill="none"  stroke="currentColor"  stroke-width="2"  stroke-linecap="round"  stroke-linejoin="round"  class="icon icon-tabler icons-tabler-outline icon-tabler-square-toggle-horizontal"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M22 12h-20" /><path d="M4 14v-8a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v8" /><path d="M18 20a2 2 0 0 0 2 -2" /><path d="M4 18a2 2 0 0 0 2 2" /><path d="M14 20l-4 0" /></svg>
            Toggle layout
          </a>
          <a href="#" class="btn btn-secondary-outline d-md-none btn-icon" onclick="toggleLayout(this)">
            <svg  xmlns="http://www.w3.org/2000/svg"  width="24"  height="24"  viewBox="0 0 24 24"  fill="none"  stroke="currentColor"  stroke-width="2"  stroke-linecap="round"  stroke-linejoin="round"  class="icon icon-tabler icons-tabler-outline icon-tabler-square-toggle-horizontal"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M22 12h-20" /><path d="M4 14v-8a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v8" /><path d="M18 20a2 2 0 0 0 2 -2" /><path d="M4 18a2 2 0 0 0 2 2" /><path d="M14 20l-4 0" /></svg>
          </a>
          <a href="/uploadExcel/{{data.project.slug}}" class="btn btn-secondary-outline d-none d-md-inline-block">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon icon-tabler icons-tabler-outline icon-tabler-upload"> <path stroke="none" d="M0 0h24v24H0z" fill="none" /> <path d="M4 17v2a2 2 0 0 0 2 2h12a2 2 0 0 0 2 -2v-2" /> <path d="M7 9l5 -5l5 5" /> <path d="M12 4l0 12" /> </svg>
            Bulk Upload
          </a>
          <a href="/uploadExcel/{{data.project.slug}}" class="btn btn-secondary-outline d-md-none btn-icon">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon icon-tabler icons-tabler-outline icon-tabler-upload"> <path stroke="none" d="M0 0h24v24H0z" fill="none" /> <path d="M4 17v2a2 2 0 0 0 2 2h12a2 2 0 0 0 2 -2v-2" /> <path d="M7 9l5 -5l5 5" /> <path d="M12 4l0 12" /> </svg>
          </a>
          {{#if (findInArray data.role "editProject")}}
          <a href="#" class="btn btn-secondary-outline d-none d-md-inline-block" id="#edit-project-{{data.project.slug}}" data-bs-toggle="modal" data-bs-target="#modal-{{data.project.slug}}">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon icon-tabler icons-tabler-outline icon-tabler-pencil-plus">
              <path stroke="none" d="M0 0h24v24H0z" fill="none" />
              <path d="M4 20h4l10.5 -10.5a2.828 2.828 0 1 0 -4 -4l-10.5 10.5v4" />
              <path d="M13.5 6.5l4 4" />
              <path d="M16 19h6" />
              <path d="M19 16v6" />
            </svg>
            Edit this project
          </a>
          <a href="#" class="btn btn-secondary-outline d-md-none btn-icon" data-bs-toggle="modal" data-bs-target="#modal-{{data.project.slug}}" aria-label="Create new report">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon icon-tabler icons-tabler-outline icon-tabler-pencil-plus">
              <path stroke="none" d="M0 0h24v24H0z" fill="none" />
              <path d="M4 20h4l10.5 -10.5a2.828 2.828 0 1 0 -4 -4l-10.5 10.5v4" />
              <path d="M13.5 6.5l4 4" />
              <path d="M16 19h6" />
              <path d="M19 16v6" />
            </svg> 
          </a>
          {{/if}}
          {{#if (findInArray data.role "createEntry")}}
          <a href="#" class="btn btn-primary d-none d-md-inline-block" id="#createNewEntry" data-bs-toggle="modal" data-bs-target="#modal-new-entry">
            <svg xmlns="http://www.w3.org/2000/svg" class="icon" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
              <path stroke="none" d="M0 0h24v24H0z" fill="none" />
              <path d="M12 5l0 14" />
              <path d="M5 12l14 0" />
            </svg>
            Create new entry
          </a>
          <a href="#" class="btn btn-primary d-md-none btn-icon" data-bs-toggle="modal" data-bs-target="#modal-new-entry" aria-label="modal-new-entry">
            <!-- Download SVG icon from http://tabler-icons.io/i/plus -->
            <svg xmlns="http://www.w3.org/2000/svg" class="icon" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
              <path stroke="none" d="M0 0h24v24H0z" fill="none" />
              <path d="M12 5l0 14" />
              <path d="M5 12l14 0" />
            </svg>
          </a>
          {{/if}}
        </div>
      </div>
    </div>
  </div>
</div>
<!-- Page body -->
<div class="container-xl pt-4" id="data-container">
  {{> showProject}}
</div>

{{#if (findInArray data.role "createEntry")}}
{{> emptyEntryModal}}
{{/if}}

{{#if (findInArray data.role "editProject")}}
{{> editProjectModal}}
{{/if}}

<script>

  function toCamelCase(str) {
    return str
        .toLowerCase()                
        .replace(/[^a-zA-Z0-9]+(.)/g, 
            (match, chr) => chr.toUpperCase() 
        );
    }

function toKebabCase(str) {
    return str
        .toLowerCase()                // Convert entire string to lowercase
        .replace(/[^a-z0-9]+/g, '-')  // Replace non-alphanumeric characters with hyphens
        .replace(/(^-|-$)/g, '');     // Remove leading or trailing hyphens if any
}


let editProject = function(elem) {

    $(elem).closest(".modal").find("input").removeClass("is-invalid");
    $(elem).closest(".modal").find(".invalid-feedback").remove();
    $(elem).closest(".modal").find("span").removeClass("border-red");
    $(elem).closest(".modal").find("span").removeClass("rounded-end");
    $(elem).closest(".modal").find(".alert").remove();
    $(elem).closest(".modal").find(".accordion-item").removeClass("bg-red-lt");

    let isValid = [];
    $(elem).closest(".modal").find("input").each( (key, val) => {
      if ($(val).val() == "") {
        $(val).addClass("is-invalid")
        if ($(val).closest(".accordion-item").length > 0) { 
          $(val).closest(".accordion-item").addClass("bg-red-lt");
        }
        if ($(val).siblings("span").length > 0) {
          $(val).siblings("span").after(`<div class="invalid-feedback mb-2">Invalid entry</div> `);
          $(val).siblings("span").addClass("is-invalid border-red rounded-end");
        } else {
          $(val).after(`<div class="invalid-feedback">Invalid entry</div> `);
        }
      } else {
        $(val).addClass("is-valid");
      }
      isValid.push($(val).val() != "");
    });

    const name = $(elem).closest(".modal").find(".project-name").val();
    const slug = $(elem).closest(".modal").find(".project-slug").val();
    const status = $(elem).closest(".modal").find(".project-status input:checked").val();
    const location = $(elem).closest(".modal").find(".project-location").val();
    const id = $(elem).closest(".modal").attr("projId");

    const fields = $(elem).closest(".modal").find(".accordion-item").map( (key, val) => {
        let options = [];
        if ( $(val).find(".dynamic-options").length > 0 ) {
            $(val).find(".dynamic-options input").each( (key, dynamicField) => {
                options.push({
                    label: $(dynamicField).attr("data-label"),
                    value: $(dynamicField).val()
                })
            });
        }
        return {
            name: toCamelCase($(val).find("input:first").val()), 
            actualName: $(val).find("input:first").val(),
            type: $(val).find(".form-select").val(),
            options: options.length > 0 ? options : undefined
        }
    }).get();

    if (!(isValid.every(val => val === true))) {
        return false;
    }

    let currentBtnHTML = $(elem).html();
    $(elem).html(`<span class="spinner-border spinner-border-sm me-2" role="status"></span>`);
   
    $.ajax({
      url: `/project/update/${id}`, 
      type: 'POST',
      contentType: 'application/json', 
      data: JSON.stringify({name, status, location, slug, fields}),
      success: function(response) {
        $(elem).html(currentBtnHTML);
        window.location.href = `/project/${toKebabCase(slug)}`;
      },
      error: function(xhr, status, error) {
        $(elem).html(currentBtnHTML);
        $(".modal-footer").append(`
        <div class="w-100 d-block alert alert-danger mt-4" role="alert">
          <h4 class="alert-title">Could not save.</h4>
          <div class="text-secondary">${xhr.responseText}</div>
        </div>`);
      }
    }); 

  };

    document.addEventListener('DOMContentLoaded', function() {
      let el = document.querySelector('.accordion');
      if (el) {
          new Sortable(el, {
            animation: 100,
            group: '.accordion',
            draggable: '.accordion-item',
            handle: '.accordion-header',
            sort: true,
            filter: '.sortable-disabled',
            chosenClass: 'active'
          });
      }
  });


  $(document).on("click", ".add-project-field", function(e) {
    let projectSlug=$(this).closest(".modal").attr("projSlug");
    let fieldNo = $(this).closest(".modal-body").find(".accordion-button").length + 1;
    $('.accordion-button').addClass('collapsed');
    $('.accordion-collapse').removeClass('show').collapse('hide');
    $(this).closest(".modal-body").find(".accordion").append(`
    <div class="accordion-item">
      <h2 class="accordion-header d-flex justify-content-between" id="">
        <button class="accordion-button " type="button" data-bs-toggle="collapse" data-bs-target="#collapse-${projectSlug}-${fieldNo}" aria-expanded="true">
          Field # ${fieldNo}
        </button>
      </h2>
      <div id="collapse-${projectSlug}-${fieldNo}" class="accordion-collapse collapse show" data-bs-parent="#accordion-${projectSlug}">
        <div class="accordion-body pt-0">
          <div class="mb-3">
              <label class="form-label">Name</label>
              <input id="" type="text" class="form-control" name="example-text-input" placeholder="Field name" value="" />
          </div>
          <div class="mb-3">
              <label class="form-label">Type</label>
              <select class="form-select">
                <option value="string">String</option>
                <option value="textarea">Long text</option>
                <option value="number">Number</option>
                <option value="boolean">Boolean</option>
                <option value="dropdown">Dropdown</option>
                <option value="date">Date (Calendar)</option>
                <option value="image">Image upload</option>
                <option value="file">File upload</option>
              </select>
          </div>
          <div class="mb-3 text-center">
            <button class="btn btn-outline-danger border delete-project-field">
              <svg  xmlns="http://www.w3.org/2000/svg"  width="24"  height="24"  viewBox="0 0 24 24"  fill="none"  stroke="currentColor"  stroke-width="2"  stroke-linecap="round"  stroke-linejoin="round"  class="icon icon-tabler icons-tabler-outline icon-tabler-trash"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M4 7l16 0" /><path d="M10 11l0 6" /><path d="M14 11l0 6" /><path d="M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2 -2l1 -12" /><path d="M9 7v-3a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v3" /></svg>
              Delete this field
            </button>
          </div>
        </div>
      </div>
    </div>

    `);
  })


  $(document).on("click", ".delete-project-field", function(e) {
    let modal = $(this).closest(".modal");
    let projectSlug = modal.attr("projSlug");
    $(this).closest(".accordion-item").remove();
    modal.find(".accordion-item").each( (key, val) => {
      $(val).find(".accordion-button").attr({"data-bs-target": `#collapse-${projectSlug}-${key+1}`});
      $(val).find(".accordion-collapse").attr({id: `collapse-${projectSlug}-${key+1}`})
    })
  })


  $(document).on("change keyup", ".accordion-item input, .accordion-item .form-select", function() {
    if ($(this).hasClass("form-select")) {
        addOptions(this);
    }
    let input = $(this).closest(".accordion-item").find("input").val();
    let type = $(this).closest(".accordion-item").find(".form-select").val();
    $(this).closest(".accordion-item").find(".accordion-button").html(`
    Field is <span class="badge bg-azure-lt mx-2">${input}</span>
    with type of <span class="badge bg-blue-lt mx-2">${type}</span>
    `);
  })


  const addOptions = function (elem) {

    $(elem).closest(".accordion-body").find(".dynamic-options").remove();

    const fieldType = $(elem).val(); 

    let html = "";

    if (fieldType === "boolean") {
        html += `
            <label class="form-label dynamic-options">Select boolean values</label>
            <div class="mb-3 dynamic-options">

                <div class="row g-2" style="margin-bottom:0.5rem">
                    <div class="col-auto">
                        <a href="#" class="btn btn-icon disabled" aria-label="Button">
                            <svg  xmlns="http://www.w3.org/2000/svg"  width="24"  height="24"  viewBox="0 0 24 24"  fill="none"  stroke="currentColor"  stroke-width="2"  stroke-linecap="round"  stroke-linejoin="round"  class="icon icon-tabler icons-tabler-outline icon-tabler-check"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M5 12l5 5l10 -10" /></svg>
                        </a>
                    </div>
                    <div class="col">
                        <input type="text" data-label="true" class="form-control" placeholder="Active">
                    </div>
                </div>

                <div class="row g-2" style="margin-bottom:0.5rem">
                    <div class="col-auto">
                        <a href="#" class="btn btn-icon disabled" aria-label="Button">
                            <svg  xmlns="http://www.w3.org/2000/svg"  width="24"  height="24"  viewBox="0 0 24 24"  fill="none"  stroke="currentColor"  stroke-width="2"  stroke-linecap="round"  stroke-linejoin="round"  class="icon icon-tabler icons-tabler-outline icon-tabler-x"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M18 6l-12 12" /><path d="M6 6l12 12" /></svg>
                        </a>
                    </div>
                    <div class="col">
                        <input type="text" data-label="false" class="form-control" placeholder="Inactive">
                    </div>
                </div>

            </div>
        `;
    } else if (fieldType === "dropdown") {
        html += `
            <label class="form-label dynamic-options">Add / edit dropdown options</label>
            <div class="mb-3 dynamic-options">
                <div class="row g-2">
                    <div class="col-auto">
                        <a href="#" class="btn btn-icon" aria-label="Button" onclick="addOption(this)">
                            <svg  xmlns="http://www.w3.org/2000/svg"  width="24"  height="24"  viewBox="0 0 24 24"  fill="none"  stroke="currentColor"  stroke-width="2"  stroke-linecap="round"  stroke-linejoin="round"  class="icon icon-tabler icons-tabler-outline icon-tabler-plus"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M12 5l0 14" /><path d="M5 12l14 0" /></svg>
                        </a>
                        <a href="#" class="btn btn-icon" aria-label="Button" onclick="deleteOption(this)">
                            <svg  xmlns="http://www.w3.org/2000/svg"  width="24"  height="24"  viewBox="0 0 24 24"  fill="none"  stroke="currentColor"  stroke-width="2"  stroke-linecap="round"  stroke-linejoin="round"  class="icon icon-tabler icons-tabler-outline icon-tabler-trash"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M4 7l16 0" /><path d="M10 11l0 6" /><path d="M14 11l0 6" /><path d="M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2 -2l1 -12" /><path d="M9 7v-3a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v3" /></svg>
                        </a>
                    </div>
                    <div class="col">
                        <input type="text" class="form-control" placeholder="Enter your option">
                    </div>
                </div>
            </div>
        `;
    };

    // Append the generated HTML to the appropriate container
    $(elem).closest(".accordion-body").find(".text-center").before(html); // Adjust the selector to your actual container
}

const addOption = function (elem) {
    let html = `
        <div class="mb-3 dynamic-options">
            <div class="row g-2">
                <div class="col-auto">
                    <a href="#" class="btn btn-icon" aria-label="Button" onclick="addOption(this)">
                        <svg  xmlns="http://www.w3.org/2000/svg"  width="24"  height="24"  viewBox="0 0 24 24"  fill="none"  stroke="currentColor"  stroke-width="2"  stroke-linecap="round"  stroke-linejoin="round"  class="icon icon-tabler icons-tabler-outline icon-tabler-plus"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M12 5l0 14" /><path d="M5 12l14 0" /></svg>
                    </a>
                    <a href="#" class="btn btn-icon" aria-label="Button" onclick="deleteOption(this)">
                        <svg  xmlns="http://www.w3.org/2000/svg"  width="24"  height="24"  viewBox="0 0 24 24"  fill="none"  stroke="currentColor"  stroke-width="2"  stroke-linecap="round"  stroke-linejoin="round"  class="icon icon-tabler icons-tabler-outline icon-tabler-trash"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M4 7l16 0" /><path d="M10 11l0 6" /><path d="M14 11l0 6" /><path d="M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2 -2l1 -12" /><path d="M9 7v-3a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v3" /></svg>
                    </a>
                </div>
                <div class="col">
                    <input type="text" class="form-control" placeholder="Enter your option">
                </div>
            </div>
        </div>
        `;
    $(elem).closest(".accordion-body").find(".text-center").before(html);
}

const deleteOption = function (elem) {
    if ($(elem).closest(".accordion-body").find(".mb-3.dynamic-options").length == 1) {
        return console.log("can't be deleted as this is the last option");
    }
    $(elem).closest(".mb-3").remove();
}

// Here start creating entries on click of save-entry button

const saveEntry = function(elem) {

    console.log(elem);

    $(elem).closest(".modal").find("input").removeClass("is-invalid");
    $(elem).closest(".modal").find(".invalid-feedback").remove();
    $(elem).closest(".modal").find("span").removeClass("border-red");
    $(elem).closest(".modal").find("span").removeClass("rounded-end");
    $(elem).closest(".modal").find(".alert").remove();

    let isValid = [];

    $(elem).closest(".modal").find(".form-control, .form-select").each( (key, val) => {
      if ($(val).val() == "") {
        $(val).addClass("is-invalid")
        if ($(val).siblings("span").length > 0) {
          $(val).siblings(".invalid-feedback").remove();
          $(val).siblings("span").after(`<div class="invalid-feedback mb-2">Invalid entry</div> `);
          $(val).siblings("span").addClass("is-invalid border-red rounded-end");
          $(val).siblings("input").addClass("is-invalid");
        } else {
          $(val).after(`<div class="invalid-feedback">Invalid entry</div> `);
        }
      } else {
        $(val).addClass("is-valid");
      }
      isValid.push($(val).val() != "");
    });

    const data = $(elem)
        .closest(".modal")
        .find(".form-select, input, textarea")
        .toArray() // Convert jQuery collection to an array
        .reduce((total, val) => {
            Object.assign(total, {
                [$(val).attr("name")]: $(val).val()
            });
            return total;
        }, {});

    data.entryId = $(elem).closest(".modal").attr("entryId");

    if (!(isValid.every(val => val === true))) {
        return false;
    }

    let currentBtnHTML = $(elem).html();
    $(elem).html(`<span class="spinner-border spinner-border-sm me-2" role="status"></span>`);

    console.log(data);
    
    $.ajax({
      url: "/project/entry/{{data.project.slug}}", 
      type: 'POST',
      contentType: 'application/json', 
      data: JSON.stringify(data),
      success: function(response) {
        $(elem).html(currentBtnHTML);
        window.location.href = `/project/{{data.project.slug}}`;
      },
      error: function(xhr, status, error) {
        $(elem).html(currentBtnHTML);
        $(".modal-footer").append(`
        <div class="w-100 d-block alert alert-danger mt-4" role="alert">
          <h4 class="alert-title">Could not save.</h4>
          <div class="text-secondary">${xhr.responseText}</div>
        </div>`);
      }
    }); 

}

const editEntry = function(elem) {

  console.log("savingn this entry");

    $(elem).closest(".modal").find("input").removeClass("is-invalid");
    $(elem).closest(".modal").find(".invalid-feedback").remove();
    $(elem).closest(".modal").find("span").removeClass("border-red");
    $(elem).closest(".modal").find("span").removeClass("rounded-end");
    $(elem).closest(".modal").find(".alert").remove();

    let isValid = [];

    $(elem).closest(".modal").find(".entry-input").each( (key, val) => {
      if ($(val).val() == "") {
        $(val).addClass("is-invalid")
        if ($(val).siblings("span").length > 0) {
          $(val).siblings(".invalid-feedback").remove();
          $(val).siblings("span").after(`<div class="invalid-feedback mb-2">Invalid entry</div> `);
          $(val).siblings("span").addClass("is-invalid border-red rounded-end");
          $(val).siblings("input").addClass("is-invalid");
        } else {
          $(val).after(`<div class="invalid-feedback">Invalid entry</div> `);
        }
      } else {
        $(val).addClass("is-valid");
      }
      isValid.push($(val).val() != "");
    });

    const data = $(elem)
        .closest(".modal")
        .find(".form-select, input, textarea")
        .toArray() // Convert jQuery collection to an array
        .reduce((total, val) => {
            Object.assign(total, {
                [$(val).attr("name")]: $(val).val()
            });
            return total;
        }, {});

    if (!(isValid.every(val => val === true))) {
        return false;
    }

    let currentBtnHTML = $(elem).html();

    $(elem).html(`<span class="spinner-border spinner-border-sm me-2" role="status"></span>`);

    const entryId = $(elem).closest(".modal").attr("entryId");

    console.log(entryId);

    $.ajax({
      url: `/project/entry/update/{{data.project.slug}}/${entryId}`,
      type: 'POST',
      contentType: 'application/json', 
      data: JSON.stringify(data),
      success: function(response) {
        $(elem).html(currentBtnHTML);
        window.location.href = `/project/{{data.project.slug}}`;
      },
      error: function(xhr, status, error) {
        $(elem).html(currentBtnHTML);
        $(".modal-footer").append(`
        <div class="w-100 d-block alert alert-danger mt-4" role="alert">
          <h4 class="alert-title">Could not save.</h4>
          <div class="text-secondary">${xhr.responseText}</div>
        </div>`);
      }
    }); 

}

const uploadImage = function(elem) {
  console.log("upload image clicked");
  console.log( $(elem).closest(".image-upload").find("input[type=file]"));
  $(elem).closest(".image-upload").find("input[type=file]").trigger("click");
}

$(document).on('change', ".image-upload input", function(event) {
  console.log("file changed");
  let elem = $(this);
  let inputName = $(this).attr("name");
  if (event.target.files && event.target.files[0]) {
      var reader = new FileReader();
      reader.onload = function(e) {
          $(elem).closest(".image-upload").find("img").attr("src", e.target.result);
      };
      
      // Read the image file as a data URL
      reader.readAsDataURL(event.target.files[0]);

      // Send the image to the backend
      var formData = new FormData();
      formData.append('image', event.target.files[0]);
      formData.append('folderName', `akeurope/akeurope_project_entries/{{data.project.slug}}/${inputName}`);
      formData.append('entryId', $(elem).closest(".modal").attr("entryId"));

      $(elem).closest(".image-upload").find(".btn").html(`<span class="spinner-border spinner-border-sm" role="status"></span>`);

      $.ajax({
          url: '/upload-image',  // The backend route to handle the upload
          type: 'POST',
          data: formData,
          contentType: false,
          processData: false,
          success: function(response) {
              $(elem).closest(".image-upload").find(".cloudinaryUrl").val(response.cloudinaryUrl);
              $(elem).closest(".image-upload").find(".btn").html(`
                <svg  xmlns="http://www.w3.org/2000/svg"  width="24"  height="24"  viewBox="0 0 24 24"  fill="none"  stroke="currentColor"  stroke-width="2"  stroke-linecap="round"  stroke-linejoin="round"  class="icon icon-tabler icons-tabler-outline icon-tabler-check"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M5 12l5 5l10 -10" /></svg>
              `);
              $(elem).closest(".image-upload").find("img").attr("src", response.cloudinaryUrl);
          },
          error: function(error) {
              $(elem).closest(".image-upload").find(".btn").html(`
                <svg  xmlns="http://www.w3.org/2000/svg"  width="24"  height="24"  viewBox="0 0 24 24"  fill="none"  stroke="currentColor"  stroke-width="2"  stroke-linecap="round"  stroke-linejoin="round"  class="icon icon-tabler icons-tabler-outline icon-tabler-x"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M18 6l-12 12" /><path d="M6 6l12 12" /></svg>
              `);
              alert("Error uploading image:", error);
          }
      });
    }

  });

  const uploadPdf = function(elem) {
    console.log("upload pdf clicked");
    $(elem).closest(".upload-pdf").find("input").trigger("click");
  }

  $(document).on("change", ".upload-pdf input", function(event) {

    console.log("file upload changed");

    const elem = $(this);
    const fileInput = $(this)[0];
    const file = fileInput.files[0];
    const inputName = $(this).attr("name");

    if (!file) {
        alert("Please select a PDF file.");
        return;
    }

    // Ensure the file type is PDF
    if (file.type !== 'application/pdf') {
        alert("Only PDF files are allowed.");
        return;
    }

    // Prepare form data to send to backend
    const formData = new FormData();
    formData.append('pdf', file);
    formData.append('folderName', `akeurope/akeurope_project_entries/{{data.project.slug}}/${inputName}`);
    formData.append('entryId', $(elem).closest(".modal").attr("entryId"));


    $(elem).closest(".upload-pdf").find(".btn").html(`<span class="spinner-border spinner-border-sm" role="status"></span>`);
    // Send PDF file to the backend via AJAX
    $.ajax({
        url: '/upload-pdf',  // Backend route to handle PDF upload
        type: 'POST',
        data: formData,
        contentType: false,
        processData: false,
        success: function(response) {
            $(elem).closest(".upload-pdf").find(".cloudinaryUrl").val(response.cloudinaryUrl);
            $(elem).closest(".upload-pdf").find(".btn").html(`
              <svg  xmlns="http://www.w3.org/2000/svg"  width="24"  height="24"  viewBox="0 0 24 24"  fill="none"  stroke="currentColor"  stroke-width="2"  stroke-linecap="round"  stroke-linejoin="round"  class="icon icon-tabler icons-tabler-outline icon-tabler-check"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M5 12l5 5l10 -10" /></svg>
            `);
        },
        error: function(error) {
            alert("Error uploading PDF:", error);
        }
    });
  })

  // Load the edit entry modal
  $(document).on("click", ".edit-entry", function(e) {

    const entryId = $(this).attr("entry-id");

    const modalExists = $(document).find(`#button-${entryId}`).length > 0;

    if (modalExists) {
      return $(`#button-${entryId}`).trigger("click");
    }

    $.ajax({
      url: `/getEntryModal/{{data.project.slug}}/${entryId}`,
      type: 'GET',
      contentType: 'application/json', 
      success: function(response) {
        $("footer").before(response);
        $(`#button-${entryId}`).trigger("click");
        refreshImages();
      },
      error: function(xhr, status, error) {
        alert(xhr.responseText)
      }
    });

  })

  const defaultImageUrl = "/static/images/missing-image.png";

  const refreshImages = function() {
    $('img').each(function() {
        // Listen for the error event on each image
        $(this).on('error', function() {
            // Set the src to the default image if the original image fails to load
            $(this).attr('src', defaultImageUrl);
        });
    });
  }

  refreshImages();

  let newLayout = '{{data.layout}}' == 'grid' ? 'table' : 'grid'; 

  const toggleLayout = function(elem) {
    $.ajax({
      url: '/update-layout',
      method: 'POST',
      data: { layout: newLayout },
      success: function(response) {
          showData();
      },
      error: function() {
          alert("Failed to update layout.");
      }
    });
  }

  const showData = function() {
    $.ajax({
      url: '/getEntryData/{{data.project.slug}}',
      method: 'GET',
      success: function(response) {
        newLayout = newLayout == 'grid' ? 'table' : 'grid'; 
        $("#data-container").html(response);
        refreshImages();
      },
      error: function(error) {
          alert(error.responseText);
      }
    }); 
  }

  const deleteEntry = function(elem) {
    console.log("delete entry");
    const entryId = $(elem).attr("entry-id");
    $.ajax({
        url: '/project/entry/delete/{{data.project.slug}}',
        method: 'POST',
        data: {entryId}, 
        success: function(response) {
          console.log(response);
            $(elem).closest(".data-row").remove();
        },
        error: function(error) {
            alert(error.responseText)
        }
      });  
  }


</script>