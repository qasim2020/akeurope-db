<!-- Page header -->
<div class="page-header d-print-none">
  <div class="container-xl">
    <div class="row g-2 align-items-center">
      <div class="col">
        <!-- Page pre-title -->
        <div class="page-pretitle"> Overview </div>
        <h2 class="page-title"> All Projects </h2>
      </div>
      <!-- Page title actions -->
      <div class="col-auto ms-auto d-print-none">
        <div class="btn-list">
           <a href="#" class="btn btn-secondary-outline d-none d-md-inline-block" onclick="toggleLayout(this)">
            <svg  xmlns="http://www.w3.org/2000/svg"  width="24"  height="24"  viewBox="0 0 24 24"  fill="none"  stroke="currentColor"  stroke-width="2"  stroke-linecap="round"  stroke-linejoin="round"  class="icon icon-tabler icons-tabler-outline icon-tabler-square-toggle-horizontal"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M22 12h-20" /><path d="M4 14v-8a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v8" /><path d="M18 20a2 2 0 0 0 2 -2" /><path d="M4 18a2 2 0 0 0 2 2" /><path d="M14 20l-4 0" /></svg>
            Toggle layout
          </a>
          <a href="#" class="btn btn-secondary-outline d-md-none btn-icon" onclick="toggleLayout(this)">
            <svg  xmlns="http://www.w3.org/2000/svg"  width="24"  height="24"  viewBox="0 0 24 24"  fill="none"  stroke="currentColor"  stroke-width="2"  stroke-linecap="round"  stroke-linejoin="round"  class="icon icon-tabler icons-tabler-outline icon-tabler-square-toggle-horizontal"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M22 12h-20" /><path d="M4 14v-8a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v8" /><path d="M18 20a2 2 0 0 0 2 -2" /><path d="M4 18a2 2 0 0 0 2 2" /><path d="M14 20l-4 0" /></svg>
          </a>
          {{#if (findInArray data.role "createProject")}}
          <a href="#" class="btn btn-primary d-none d-md-inline-block" id="" data-bs-toggle="modal" data-bs-target="#modal-new-project">
            <!-- Download SVG icon from http://tabler-icons.io/i/plus -->
            <svg xmlns="http://www.w3.org/2000/svg" class="icon" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"> <path stroke="none" d="M0 0h24v24H0z" fill="none" /> <path d="M12 5l0 14" /> <path d="M5 12l14 0" /> </svg> 
            Create new project
          </a>
          <a href="#" class="btn btn-primary d-md-none btn-icon" data-bs-toggle="modal" data-bs-target="#modal-new-project" aria-label="Create new project">
            <!-- Download SVG icon from http://tabler-icons.io/i/plus -->
            <svg xmlns="http://www.w3.org/2000/svg" class="icon" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"> <path stroke="none" d="M0 0h24v24H0z" fill="none" /> <path d="M12 5l0 14" /> <path d="M5 12l14 0" /> </svg> 
          </a>
          {{/if}}
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Page body -->
<div class="container-xl pt-4" id="data-container">
  {{> showProjects}}
</div>

{{#if (findInArray data.role "createProject")}}
  {{> emptyProjectModal}}
{{/if}}

<script>

  $(document).on("click", ".edit-project", function(e) {

    const projId = $(this).attr("project-id");

    const modalExists = $(document).find(`#button-${projId}`).length > 0;

    if (modalExists) {
      return $(`#button-${projId}`).trigger("click");
    }

    $.ajax({
      url: `/getProjectModal/${projId}`,
      type: 'GET',
      contentType: 'application/json', 
      success: function(response) {
        $("footer").before(response);
        $(`#button-${projId}`).trigger("click");
          let allAccordions = $(".accordion").length - 1;
          let el = document.querySelectorAll(".accordion")[allAccordions];
          new Sortable(el, {
            animation: 100,
            group: '.accordion',
            draggable: '.accordion-item',
            handle: '.accordion-header',
            sort: true,
            filter: '.sortable-disabled',
            chosenClass: 'active'
          });
      },
      error: function(xhr, status, error) {
        alert(xhr.responseText);
      }
    });

  })

  function toCamelCase(str) {
    return str
        .toLowerCase()                
        .replace(/[^a-zA-Z0-9]+(.)/g, 
            (match, chr) => chr.toUpperCase() 
        );
    }

  let editProject = function(elem) {

    $(elem).closest(".modal").find("input").removeClass("is-invalid");
    $(elem).closest(".modal").find(".invalid-feedback").remove();
    $(elem).closest(".modal").find("span").removeClass("border-red");
    $(elem).closest(".modal").find("span").removeClass("rounded-end");
    $(elem).closest(".modal").find(".alert").remove();
    $(elem).closest(".modal").find(".accordion-item").removeClass("bg-red-lt");

    let isValid = [];
    $(elem).closest(".modal").find("input").each( (key, val) => {
      if ($(val).val() == "") {
        $(val).addClass("is-invalid")
        if ($(val).closest(".accordion-item").length > 0) { 
          $(val).closest(".accordion-item").addClass("bg-red-lt");
        }
        if ($(val).siblings("span").length > 0) {
          $(val).siblings("span").after(`<div class="invalid-feedback mb-2">Invalid entry</div> `);
          $(val).siblings("span").addClass("is-invalid border-red rounded-end");
        } else {
          $(val).after(`<div class="invalid-feedback">Invalid entry</div> `);
        }
      } else {
        $(val).addClass("is-valid");
      }
      isValid.push($(val).val() != "");
    });

    const name = $(elem).closest(".modal").find(".project-name").val();
    const slug = $(elem).closest(".modal").find(".project-slug").val();
    const status = $(elem).closest(".modal").find(".project-status input:checked").val();
    const location = $(elem).closest(".modal").find(".project-location").val();
    const id = $(elem).closest(".modal").attr("projId");

    const fields = $(elem).closest(".modal").find(".accordion-item").map( (key, val) => {
        let options = [];
        if ( $(val).find(".dynamic-options").length > 0 ) {
            $(val).find(".dynamic-options input").each( (key, dynamicField) => {
                options.push({
                    label: $(dynamicField).attr("data-label"),
                    value: $(dynamicField).val()
                })
            });
        }
        return {
            name: toCamelCase($(val).find("input:first").val()), 
            actualName: $(val).find("input:first").val(),
            type: $(val).find(".form-select").val(),
            options: options.length > 0 ? options : undefined,
            primary: $(elem).closest(".modal").find(".primary-field input").val() == $(val).find("input:first").val()
        }
    }).get();

    if (highlightRepeatingValues($(elem).closest(".modal"))) return;

    if (!(isValid.every(val => val === true))) {
        return false;
    }

    let currentBtnHTML = $(elem).html();
    $(elem).html(`<span class="spinner-border spinner-border-sm me-2" role="status"></span>`);
   
    $.ajax({
      url: `/project/update/${id}`, 
      type: 'POST',
      contentType: 'application/json', 
      data: JSON.stringify({name, status, location, slug, fields}),
      success: function(response) {
        $(elem).html(currentBtnHTML);
        window.location.href = "/projects";
      },
      error: function(xhr, status, error) {
        $(elem).html(currentBtnHTML);
        $(".modal-footer").append(`
        <div class="w-100 d-block alert alert-danger mt-4" role="alert">
          <h4 class="alert-title">Could not save.</h4>
          <div class="text-secondary">${xhr.responseText}</div>
        </div>`);
      }
    }); 

  };

  $(document).on("click", "#save-project", function(e) {

    e.preventDefault();

    $("#create-project").find("input").removeClass("is-invalid");
    $("#create-project").find("input").removeClass("is-valid");
    $("#create-project").find(".invalid-feedback").remove();
    $("#create-project").find("span").removeClass("border-red");
    $("#create-project").find("span").removeClass("rounded-end");
    $("#create-project").find(".alert").remove();
    $("#create-project").closest(".modal").find(".accordion-item").removeClass("bg-red-lt");

    let isValid = [];
    $("#create-project").find("input").each( (key, val) => {
      if ($(val).val() == "") {
        $(val).addClass("is-invalid")
        if ($(val).closest(".accordion-item").length > 0) { 
          $(val).closest(".accordion-item").addClass("bg-red-lt");
        }
        if ($(val).siblings("span").length > 0) {
          $(val).siblings("span").after(`<div class="invalid-feedback mb-2">Invalid entry</div> `);
          $(val).siblings("span").addClass("is-invalid border-red rounded-end");
        } else {
          $(val).after(`<div class="invalid-feedback">Invalid entry</div> `);
        }
      } else {
        $(val).addClass("is-valid");
      }
      isValid.push($(val).val() != "");
    });

    if (highlightRepeatingValues($("#create-project"))) return;

    if (!(isValid.every(val => val === true))) {
        return false;
    };

    const name = $("#project-name").val();
    const slug = $("#project-slug").val();
    const location = $("#project-location").val();
    const status = $("#project-status").find("input:checked").val();

    const fields = $("#create-project").closest(".modal").find(".accordion-item").map( (key, val) => {
        let options = [];
        if ( $(val).find(".dynamic-options").length > 0 ) {
            $(val).find(".dynamic-options input").each( (key, dynamicField) => {
                options.push({
                    label: $(dynamicField).attr("data-label"),
                    value: $(dynamicField).val()
                })
            });
        }
        return {
            name: toCamelCase($(val).find("input:first").val()), 
            actualName: $(val).find("input:first").val(),
            type: $(val).find(".form-select").val(),
            options: options.length > 0 ? options : undefined,
            primary: $("#create-project").closest(".modal").find(".primary-field input").val() == $(val).find("input:first").val()
        }
    }).get();

    let currentBtnHTML = $(this).html();
    $(this).html(`<span class="spinner-border spinner-border-sm me-2" role="status"></span>`);

    $.ajax({
      url: '/project/create', 
      type: 'POST',
      contentType: 'application/json', 
      data: JSON.stringify({name, status, location, slug, fields}),
      success: function(response) {
        $("#save-project").html(currentBtnHTML);
        window.location.href = "/projects";
      },
      error: function(xhr, status, error) {
        $("#save-project").html(currentBtnHTML);
        $(".modal-footer").append(`
        <div class="w-100 d-block alert alert-danger mt-4" role="alert">
          <h4 class="alert-title">Could not save.</h4>
          <div class="text-secondary">${xhr.responseText}</div>
        </div>`);
      }
    });

  })

  function highlightRepeatingValues($container) {
    const valueCounts = new Map();
    let hasRepeatingValues = false;

    // First, count occurrences of each input value
    $container.find(".accordion-item").each((key, val) => {
      const $input = $(val).find("input:first");
      const inputValue = $input.val();

      // Update the count of the value in the map
      if (valueCounts.has(inputValue)) {
        valueCounts.set(inputValue, valueCounts.get(inputValue) + 1);
      } else {
        valueCounts.set(inputValue, 1);
      }
    });

    // Highlight the fields with repeating values and check if there are any
    $container.find(".accordion-item").each((key, val) => {
      const $input = $(val).find("input:first");
      const inputValue = $input.val();

      if (valueCounts.get(inputValue) > 1) {
        hasRepeatingValues = true;

        // Add 'is-invalid' class to the input field
        $input.addClass("is-invalid");

        // Append an 'invalid-feedback' element if not already present
        if ($input.next('.invalid-feedback').length === 0) {
          $input.after('<div class="invalid-feedback">This value is repeated.</div>');
        }

        // Change the background color of the accordion item
        $(val).addClass("bg-red-lt");
      }
    });

    return hasRepeatingValues;
  }


  document.addEventListener('DOMContentLoaded', function() {
      let el = document.querySelector('.accordion');
      if (el) {
          new Sortable(el, {
            animation: 100,
            group: '.accordion',
            draggable: '.accordion-item',
            handle: '.accordion-header',
            sort: true,
            filter: '.sortable-disabled',
            chosenClass: 'active'
          });
      }
  });

  $(document).on("click", ".add-project-field", function(e) {
    let projectSlug=$(this).closest(".modal").attr("projSlug");
    let fieldNo = $(this).closest(".modal-body").find(".accordion-button").length + 1;
    $('.accordion-button').addClass('collapsed');
    $('.accordion-collapse').removeClass('show').collapse('hide');
    $(this).closest(".modal-body").find(".accordion").append(`
    <div class="accordion-item">
      <h2 class="accordion-header d-flex justify-content-between" id="">
        <button class="accordion-button " type="button" data-bs-toggle="collapse" data-bs-target="#collapse-${projectSlug}-${fieldNo}" aria-expanded="true">
          Field # ${fieldNo}
        </button>
      </h2>
      <div id="collapse-${projectSlug}-${fieldNo}" class="accordion-collapse collapse show" data-bs-parent="#accordion-${projectSlug}">
        <div class="accordion-body pt-0">
          <div class="mb-3">
              <label class="form-label">Name</label>
              <input id="" type="text" class="form-control" name="example-text-input" placeholder="Field name" value="" />
          </div>
          <div class="mb-3">
              <label class="form-label">Type</label>
              <select class="form-select">
                <option value="string">String</option>
                <option value="textarea">Long text</option>
                <option value="number">Number</option>
                <option value="boolean">Boolean</option>
                <option value="dropdown">Dropdown</option>
                <option value="date">Date (Calendar)</option>
                <option value="image">Image upload</option>
                <option value="file">File upload</option>
              </select>
          </div>
          <div class="mb-3 text-center">
            <button class="btn btn-outline-danger border delete-project-field">
              <svg  xmlns="http://www.w3.org/2000/svg"  width="24"  height="24"  viewBox="0 0 24 24"  fill="none"  stroke="currentColor"  stroke-width="2"  stroke-linecap="round"  stroke-linejoin="round"  class="icon icon-tabler icons-tabler-outline icon-tabler-trash"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M4 7l16 0" /><path d="M10 11l0 6" /><path d="M14 11l0 6" /><path d="M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2 -2l1 -12" /><path d="M9 7v-3a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v3" /></svg>
              Delete this field
            </button>
          </div>
        </div>
      </div>
    </div>

    `);
  })


  $(document).on("click", ".delete-project-field", function(e) {
    let modal = $(this).closest(".modal");
    let projectSlug = modal.attr("projSlug");
    $(this).closest(".accordion-item").remove();
    modal.find(".accordion-item").each( (key, val) => {
      $(val).find(".accordion-button").attr({"data-bs-target": `#collapse-${projectSlug}-${key+1}`});
      $(val).find(".accordion-collapse").attr({id: `collapse-${projectSlug}-${key+1}`})
    })
  })
  
 
  $(document).on("change keyup", ".accordion-item input, .accordion-item .form-select", function() {
    if ($(this).hasClass("form-select")) {
        addOptions(this);
    }
    addPrimaryField(this);
    let input = $(this).closest(".accordion-item").find("input").val();
    let type = $(this).closest(".accordion-item").find(".form-select").val();
    $(this).closest(".accordion-item").find(".accordion-button").html(`
      <span class='d-none d-md-inline-block me-2'>Field is </span>
      <span class="badge bg-azure-lt me-2">${input}</span>
      <span class='d-none d-md-inline-block me-2'>with type of </span>
      <span class="badge bg-blue-lt">${type}</span>
    `);
  })

  const addPrimaryField = function(elem) {
    let allFields = $(elem).closest(".modal").find(".accordion-item").map( (key, val) => $(val).find("input:first").val() );
    let html = ``;
    allFields.each( (key, val) => {
      if (val.length > 0) {
        html += `<span class="badge cursor-pointer me-1 mb-1" onclick="setPrimaryField(this)">${val}</span>`;
      }
    });
    $(elem).closest(".modal").find(".primary-field-selectors").html(html);
    $(elem).closest(".modal").find(".primary-field input").removeClass("is-valid").val("");
  }

  const setPrimaryField = function(elem) {
    $(elem).siblings().removeClass("bg-blue-lt");
    $(elem).addClass("bg-blue-lt");
    $(elem).closest(".primary-field").find("input").val( $(elem).html() );
  }

  const addOptions = function (elem) {

    $(elem).closest(".accordion-body").find(".dynamic-options").remove();

    const fieldType = $(elem).val(); 

    let html = "";

    if (fieldType === "boolean") {
        html += `
            <label class="form-label dynamic-options">Select boolean values</label>
            <div class="mb-3 dynamic-options">

                <div class="row g-2" style="margin-bottom:0.5rem">
                    <div class="col-auto">
                        <a href="#" class="btn btn-icon disabled" aria-label="Button">
                            <svg  xmlns="http://www.w3.org/2000/svg"  width="24"  height="24"  viewBox="0 0 24 24"  fill="none"  stroke="currentColor"  stroke-width="2"  stroke-linecap="round"  stroke-linejoin="round"  class="icon icon-tabler icons-tabler-outline icon-tabler-check"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M5 12l5 5l10 -10" /></svg>
                        </a>
                    </div>
                    <div class="col">
                        <input type="text" data-label="true" class="form-control" placeholder="Active">
                    </div>
                </div>

                <div class="row g-2" style="margin-bottom:0.5rem">
                    <div class="col-auto">
                        <a href="#" class="btn btn-icon disabled" aria-label="Button">
                            <svg  xmlns="http://www.w3.org/2000/svg"  width="24"  height="24"  viewBox="0 0 24 24"  fill="none"  stroke="currentColor"  stroke-width="2"  stroke-linecap="round"  stroke-linejoin="round"  class="icon icon-tabler icons-tabler-outline icon-tabler-x"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M18 6l-12 12" /><path d="M6 6l12 12" /></svg>
                        </a>
                    </div>
                    <div class="col">
                        <input type="text" data-label="false" class="form-control" placeholder="Inactive">
                    </div>
                </div>

            </div>
        `;
    } else if (fieldType === "dropdown") {
        html += `
            <label class="form-label dynamic-options">Add / edit dropdown options</label>
            <div class="mb-3 dynamic-options">
                <div class="row g-2">
                    <div class="col-auto">
                        <a href="#" class="btn btn-icon" aria-label="Button" onclick="addOption(this)">
                            <svg  xmlns="http://www.w3.org/2000/svg"  width="24"  height="24"  viewBox="0 0 24 24"  fill="none"  stroke="currentColor"  stroke-width="2"  stroke-linecap="round"  stroke-linejoin="round"  class="icon icon-tabler icons-tabler-outline icon-tabler-plus"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M12 5l0 14" /><path d="M5 12l14 0" /></svg>
                        </a>
                        <a href="#" class="btn btn-icon" aria-label="Button" onclick="deleteOption(this)">
                            <svg  xmlns="http://www.w3.org/2000/svg"  width="24"  height="24"  viewBox="0 0 24 24"  fill="none"  stroke="currentColor"  stroke-width="2"  stroke-linecap="round"  stroke-linejoin="round"  class="icon icon-tabler icons-tabler-outline icon-tabler-trash"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M4 7l16 0" /><path d="M10 11l0 6" /><path d="M14 11l0 6" /><path d="M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2 -2l1 -12" /><path d="M9 7v-3a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v3" /></svg>
                        </a>
                    </div>
                    <div class="col">
                        <input type="text" class="form-control" placeholder="Enter your option">
                    </div>
                </div>
            </div>
        `;
    };

    // Append the generated HTML to the appropriate container
    $(elem).closest(".accordion-body").find(".text-center").before(html); // Adjust the selector to your actual container
}

const addOption = function (elem) {
    let html = `
        <div class="mb-3 dynamic-options">
            <div class="row g-2">
                <div class="col-auto">
                    <a href="#" class="btn btn-icon" aria-label="Button" onclick="addOption(this)">
                        <svg  xmlns="http://www.w3.org/2000/svg"  width="24"  height="24"  viewBox="0 0 24 24"  fill="none"  stroke="currentColor"  stroke-width="2"  stroke-linecap="round"  stroke-linejoin="round"  class="icon icon-tabler icons-tabler-outline icon-tabler-plus"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M12 5l0 14" /><path d="M5 12l14 0" /></svg>
                    </a>
                    <a href="#" class="btn btn-icon" aria-label="Button" onclick="deleteOption(this)">
                        <svg  xmlns="http://www.w3.org/2000/svg"  width="24"  height="24"  viewBox="0 0 24 24"  fill="none"  stroke="currentColor"  stroke-width="2"  stroke-linecap="round"  stroke-linejoin="round"  class="icon icon-tabler icons-tabler-outline icon-tabler-trash"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M4 7l16 0" /><path d="M10 11l0 6" /><path d="M14 11l0 6" /><path d="M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2 -2l1 -12" /><path d="M9 7v-3a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v3" /></svg>
                    </a>
                </div>
                <div class="col">
                    <input type="text" class="form-control" placeholder="Enter your option">
                </div>
            </div>
        </div>
        `;
    $(elem).closest(".accordion-body").find(".text-center").before(html);
}

const deleteOption = function (elem) {
    if ($(elem).closest(".accordion-body").find(".mb-3.dynamic-options").length == 1) {
        return console.log("can't be deleted as this is the last option");
    }
    $(elem).closest(".mb-3").remove();
}


let newLayout = '{{data.layout}}' == 'grid' ? 'table' : 'grid'; 

const toggleLayout = function(elem) {
  $.ajax({
    url: '/update-layout',
    method: 'POST',
    data: { layout: newLayout },
    success: function(response) {
        showData();
    },
    error: function() {
        alert("Failed to update layout.");
    }
  });
}

const showData = function() {
  $.ajax({
    url: '/getProjectsData',
    method: 'GET',
    success: function(response) {
      newLayout = newLayout == 'grid' ? 'table' : 'grid'; 
      $("#data-container").html(response);
    },
    error: function(error) {
        alert("Failed to update layout.");
        console.log(error);
    }
  }); 
}


</script>