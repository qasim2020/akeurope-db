<!-- Page header -->
<div class="page-header d-print-none">
  <div class="container-xl">
    <div class="row g-2 align-items-center">
      <div class="col">
        <!-- Page pre-title -->
        <div class="page-pretitle"> Overview </div>
        <h2 class="page-title"> Invoices
        </h2>
      </div>
      <!-- Page title actions -->
      <div class="col-auto ms-auto d-print-none">
        <div class="btn-list">
          {{#if (findInArray data.role "createOrders")}}
          <a href="#" class="btn btn-primary d-none d-md-inline-block" id="createNewOrder" data-bs-toggle="modal"
            data-bs-target="#modal-new-order">
            <svg xmlns="http://www.w3.org/2000/svg" class="icon" width="24" height="24" viewBox="0 0 24 24"
              stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
              <path stroke="none" d="M0 0h24v24H0z" fill="none" />
              <path d="M12 5l0 14" />
              <path d="M5 12l14 0" />
            </svg>
            Create Linked Order
          </a>
          <a href="#" class="btn btn-primary d-md-none btn-icon" data-bs-toggle="modal"
            data-bs-target="#modal-new-order" aria-label="modal-new-order">
            <!-- Download SVG icon from http://tabler-icons.io/i/plus -->
            <svg xmlns="http://www.w3.org/2000/svg" class="icon" width="24" height="24" viewBox="0 0 24 24"
              stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
              <path stroke="none" d="M0 0h24v24H0z" fill="none" />
              <path d="M12 5l0 14" />
              <path d="M5 12l14 0" />
            </svg>
          </a>

          <a href="#" class="btn btn-primary d-none d-md-inline-block" id="createProductOrder" data-bs-toggle="modal"
            data-bs-target="#modal-product-new">
            <svg xmlns="http://www.w3.org/2000/svg" class="icon" width="24" height="24" viewBox="0 0 24 24"
              stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
              <path stroke="none" d="M0 0h24v24H0z" fill="none" />
              <path d="M12 5l0 14" />
              <path d="M5 12l14 0" />
            </svg>
            Create Product Order
          </a>
          <a href="#" class="btn btn-primary d-md-none btn-icon" data-bs-toggle="modal"
            data-bs-target="#modal-product-new" aria-label="modal-product-new">
            <!-- Download SVG icon from http://tabler-icons.io/i/plus -->
            <svg xmlns="http://www.w3.org/2000/svg" class="icon" width="24" height="24" viewBox="0 0 24 24"
              stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
              <path stroke="none" d="M0 0h24v24H0z" fill="none" />
              <path d="M12 5l0 14" />
              <path d="M5 12l14 0" />
            </svg>
          </a>
          {{/if}}
        </div>
      </div>
    </div>
  </div>
</div>
<!-- Page body -->
<div class="container-xl pt-4" id="data-container">
  {{> showOrders}}
</div>

{{#if (findInArray data.role "createOrders")}}
{{> emptyOrderModal}}
{{> productOrderModal}}
{{/if}}


<script src="https://cdn.jsdelivr.net/npm/tom-select/dist/js/tom-select.complete.min.js"></script>
{{> ordersFrontEnd}}
<script>

  let newLayout = '{{data.layout}}' == 'grid' ? 'table' : 'grid';

  const toggleLayout = function (elem) {
    $.ajax({
      url: '/update-layout',
      method: 'POST',
      data: { layout: newLayout },
      success: function (response) {
        $.ajax({
          url: '/getOrdersTable',
          method: 'GET',
          success: function (response) {
            newLayout = newLayout == 'grid' ? 'table' : 'grid';
            $("#data-container").html(response);
          },
          error: function (error) {
            alert(error.responseText);
          }
        });
      },
      error: function () {
        alert("Failed to update layout.");
      }
    });

  }

  const refreshContainers = function (modal) {
    const hrefOrder = "?refresh=true";
    loadOrdersInContainer(modal, hrefOrder);
  }

  const loadOrdersInContainer = function (elem, href) {
    if (!href) {
      href = $(elem).attr("my-href");
    }
    const url = `/getOrdersData${href}`;
    $.ajax({
      url,
      method: 'GET',
      success: function (response) {
        $(`#data-container`).html(response);
        window.history.pushState(null, '', `/orders${href}`);
      },
      error: function (error) {
        alert(error.responseText);
      }
    });
  }

  const getEditOrderModal = function (elem) {
    const orderId = $(elem).attr("order-id");

    const modalExists = $(document).find(`#button-${orderId}`).length > 0;

    if (modalExists) {
      return $(`#button-${orderId}`).trigger("click");
    }

    const isCreateModal = $(document).find(`.modal[order-id=${orderId}]`).length > 0;
    if (isCreateModal) {
      const modal = new bootstrap.Modal(document.getElementById('modal-new-order'))
      modal.show();
      return;
    }

    $.ajax({
      url: `/getEditOrderModal/${orderId}`,
      type: 'GET',
      contentType: 'application/json',
      success: function (response) {
        $("footer").before(response);
        $(`#button-${orderId}`).trigger("click");
        initializePopovers();
      },
      error: function (xhr, status, error) {
        alert(xhr.responseText);
      }
    });
  }

  document.addEventListener("DOMContentLoaded", function () {
    var el = document.getElementById('select-customer-product');

    if (!el) {
      console.log("Element #select-customer-product not found!");
      return;
    }

    if (window.TomSelect) {
      new TomSelect('#select-customer-product', {
        create: false,
        sortField: {
          field: "text",
          direction: "asc"
        },
        placeholder: 'Select a customer...'
      });

      new TomSelect('#select-country-product', {
        create: false,
        sortField: {
          field: "text",
          direction: "asc"
        },
        placeholder: 'Select the country...'
      });

      console.log("TomSelect initialized successfully.");
    } else {
      console.log("TomSelect is not available.");
    }
  });

  const doPageSearch = function (elem, href) {
    if (!href) {
      href = $(elem).attr("my-href");
    }
    $.ajax({
      url: `/getOrdersData${href}`,
      method: 'GET',
      success: function (response) {
        $("#data-container").html(response);
        window.history.pushState(null, '', `/orders${href}`);
      },
      error: function (error) {
        alert(error.responseText);
      }
    });
  }

  $(document).on('keypress', '[my-href]', function (e) {
    if (e.which === 13 || e.keyCode === 13) {

      e.preventDefault();

      const href = $(this).attr("my-href");
      const key = $(this).attr("my-key");
      const value = $(this).val();
      const regex = new RegExp(`${key}=([^&]*)`, "g");
      const updatedHref = href.replace(regex, `${key}=${value}`);

      doPageSearch('', updatedHref);

    }
  });
  
</script>