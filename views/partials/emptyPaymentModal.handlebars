<div class="modal modal-blur fade" id="modal-new-payment" tabindex="-1" style="display: none; padding-left: 0px;"
  aria-modal="true" role="dialog" entryId="">
  <div class="modal-dialog modal-xl" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Add New Payment</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">

        <div class="mb-3">
          <label class="form-label">Select Customer</label>
          <select name="" id="" class="form-select">
            {{#each data.customers}}
            <option value="{{this._id}}">{{this.name}}</option>
            {{/each}}
          </select>
          <small class="text-muted">If your customer is not listed here, <a href="/customers">click here</a> to add a
            new customer.</small>
        </div>

        <div class="mb-3 search-beneficiaries">
          <label class="form-label">Select Beneficiaries</label>
          <div class="input-group">
            <span class="input-group-text">Select</span>
            <input type="number" class="form-control" style="min-width: 50px;" value="10" min="1"
              onkeydown="if (event.key === 'Enter') searchBeneficiaries(this)" name="randomBeneficiaries"
              placeholder="Number of beneficiaries" />
            <span class="input-group-text">beneficiaries randomly or</span>

            <input type="text" class="form-control" style="min-width: 120px;"
              placeholder="search specific beneficiaries..."
              onkeydown="if (event.key === 'Enter') searchBeneficiaries(this)" name="specificBeneficiaries" />
            <span class="input-group-text">from</span>
            <select name="projectSlug" class="form-control form-select" style="min-width: 200px;">
              {{#each data.projects}}
              <option value="{{this.slug}}">{{this.name}}</option>
              {{/each}}
            </select>
            <button class="input-group-btn btn btn-icon" id="searchBeneficiaries" onclick="searchBeneficiaries(this)">
              <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none"
                stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
                class="icon icon-tabler icons-tabler-outline icon-tabler-shopping-cart-plus">
                <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                <path d="M4 19a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
                <path d="M12.5 17h-6.5v-14h-2" />
                <path d="M6 5l14 1l-.86 6.017m-2.64 .983h-10.5" />
                <path d="M16 19h6" />
                <path d="M19 16v6" />
              </svg>
            </button>
          </div>

        </div>

        <div id="search-results-payment-modal-entries"> </div>

      </div>
      <div class="modal-footer">
        <a href="#" class="btn btn-link link-secondary" data-bs-dismiss="modal"> Cancel </a>
        <a href="#" class="btn btn-primary ms-auto" onclick="createNewPayment(this)">
          <svg xmlns="http://www.w3.org/2000/svg" class="icon" width="24" height="24" viewBox="0 0 24 24"
            stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
            <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
            <path d="M12 5l0 14"></path>
            <path d="M5 12l14 0"></path>
          </svg> Create new payment </a>
      </div>
    </div>
  </div>
</div>


<script>

  $(document).ready(() => {
    console.log('document is ready');
    $("#showPaymentModal").trigger('click');
  })

  const searchBeneficiaries = function (elem) {

    let error;

    const select = $("[name=randomBeneficiaries]").val();
    const search = $("[name=specificBeneficiaries]").val();
    const slug = $("[name=projectSlug]").val();

    $('.search-beneficiaries').find('.form-control').removeClass('is-invalid');
    $('.search-beneficiaries').find('.invalid-feedback').remove();

    if (select == '' && search == '') {
      error = 'Please fill either the random or specific beneficiary input field.';
      $('.search-beneficiaries').find('.form-control').addClass('is-invalid');
      $('.search-beneficiaries').append(`<div class='invalid-feedback d-block'>${error}</div>`);
      return false;
    }

    console.log({
      select, search, slug
    })

    const currentBtnHTML = $('#searchBeneficiaries').html();
    $('#searchBeneficiaries').html(`<span class="spinner-border spinner-border-sm" role="status"></span>`);

    $.ajax({
      url: `/getPaymentModalEntryData/${slug}?select=${select}&search=${search}`,
      method: 'GET',
      success: (response) => {
        $('#searchBeneficiaries').html(currentBtnHTML);
        const elemExists = $(`#${slug}`).length > 0;
        if (elemExists) {
          $(`#${slug}`).replaceWith(response);
        } else {
          $('#search-results-payment-modal-entries').append(response);
        }
      },
      error: (error) => {
        $('#searchBeneficiaries').html(currentBtnHTML);
        alert(error.responseText);
      }
    });

  }

  const selectAllSearchResults = function (elem) {
    const count = $(elem).data("limit");
    if ($(elem).html() == `Select all (${count})`) {
      $('#last-paid-entries').find('[type="checkbox"]:not(":checked")').click();
      $(elem).html(`Unselect all (${count})`);
    } else {
      $('#last-paid-entries').find('[type="checkbox"]:checked').click();
      $(elem).html(`Select all (${count})`);
    }

  }

  const toggleSearchResults = function (elem) {
    if ($('#last-paid-entries').hasClass("d-none")) {
      $(elem).closest('.card-header').removeClass("border-0");
    } else {
      $(elem).closest('.card-header').addClass("border-0");
    }
    $('#last-paid-entries').toggleClass("d-none");
  }

  const toggleColumnSelect = function (elem) {
    const active = $(elem).hasClass("bg-green-lt");
    const colIndex = $(elem).closest("th").index();
    const isTotal = $(elem).closest("th").index() == 0;

    const rowHeadings = $(elem).closest("table").find("tr").find("th:eq(0), td:eq(0)");


    if (isTotal && active) {
      $(elem).closest('table').find(`tr`).each(function () {
        const button = $(this).find(`td, th`).find('button.bg-green-lt');
        $(button).removeClass("bg-green-lt");
        $(button).find('.icon-tabler-check').addClass("d-none");
        $(button).find('.icon-tabler-plus').removeClass("d-none");
      });
    } else if (isTotal && !active) {
      $(elem).closest('table').find(`tr`).each(function () {
        const button = $(this).find(`td, th`).find('button:not(.bg-green-lt)');
        $(button).addClass("bg-green-lt");
        $(button).find('.icon-tabler-check').removeClass("d-none");
        $(button).find('.icon-tabler-plus').addClass("d-none");
      });
    } else if (!isTotal && active) {
      $(elem).closest('table').find(`tr`).each(function () {
        const button = $(this).find(`td, th`).eq(colIndex).find('button');
        $(button).removeClass("bg-green-lt");
        $(button).find('.icon-tabler-check').addClass("d-none");
        $(button).find('.icon-tabler-plus').removeClass("d-none");
      });
      rowHeadings.find('button').removeClass('bg-green-lt');
      rowHeadings.find('.icon-tabler-check').addClass('d-none');
      rowHeadings.find('.icon-tabler-plus').removeClass('d-none');
    } else if (!isTotal && !active) {
      $(elem).closest('table').find(`tr`).each(function () {
        const button = $(this).find(`td, th`).eq(colIndex).find('button');
        $(button).addClass("bg-green-lt");
        $(button).find('.icon-tabler-check').removeClass("d-none");
        $(button).find('.icon-tabler-plus').addClass("d-none");
      });
      const rowEntries = $(elem).closest("table").find("tr");
      rowEntries.each(function () {
        const isHeadingRow = $(this).find("th").length > 0;
        let allBtnsInRow, allSelectedBtns;
        if (isHeadingRow) {
          allBtnsInRow = $(this).find('th:not(:eq(0))').find('button');
          allSelectedBtns = $(this).find('th:not(:eq(0))').find('button.bg-green-lt');
        } else {
          allBtnsInRow = $(this).find('td:not(:eq(0))').find('button');
          allSelectedBtns = $(this).find('td:not(:eq(0))').find('button.bg-green-lt');
        }
        if (allBtnsInRow.length == allSelectedBtns.length) {
          const button = $(this).closest("tr").find("td:eq(0), th:eq(0)").find('button');
          button.addClass('bg-green-lt');
          button.find('.icon-tabler-check').removeClass('d-none');
          button.find('.icon-tabler-plus').addClass('d-none');
        }
      })
    }

  }

  const toggleCostSelect = function (elem) {

    const elemState = $(elem).hasClass("bg-green-lt");
    const rowState = $(elem).closest("tr").find("button").eq(0).hasClass("bg-green-lt");
    const colIndex = $(elem).closest('td').index();
    const row = $(elem).closest('td').closest('tr');
    const table = $(elem).closest('td').closest('table');

    const isTotalColumn = $(table).find('th').eq(colIndex).index() === 0;

    if (isTotalColumn && rowState) {
      $(row).find('button').removeClass('bg-green-lt');
      $(row).find('.icon-tabler-check').addClass("d-none");
      $(row).find('.icon-tabler-plus').removeClass("d-none");

      $(row).find('button').each(function () {
        unselectColRowHeading(this);
      })
    } else if (isTotalColumn && !rowState) {
      $(row).find('button').addClass('bg-green-lt');
      $(row).find('.icon-tabler-check').removeClass("d-none");
      $(row).find('.icon-tabler-plus').addClass("d-none");
      $(table).find('button').each(function () {
        selectColRowHeading(this);
      })
    } else if (!isTotalColumn && elemState) {
      $(elem).removeClass("bg-green-lt").find("svg").toggleClass("d-none");
      unselectColRowHeading(elem);
    } else if (!isTotalColumn && !elemState) {
      $(elem).addClass("bg-green-lt").find("svg").toggleClass("d-none");
      selectColRowHeading(elem);
    }
  }

  const selectColRowHeading = function (elem) {
    const index = $(elem).closest("td, th").index();
    const rowHeading = $(elem).closest("tr").find("td:eq(0) > button");
    const colHeading = $(elem).closest("table").find("th").eq(index).find("button");
    const totalHeading = $(elem).closest("table").find("tr:eq(0)").find("button:eq(0)");

    const rowEntries = $(elem).closest("tr").find("td:not(:eq(0))");
    const colEntries = $(elem).closest("table").find(`td:nth-child(${index + 1})`);

    const fullRowSelected = rowEntries.find(".bg-green-lt").length == rowEntries.find("button").length;
    const fullColSelected = colEntries.find(".bg-green-lt").length == colEntries.find("button").length;

    if (fullRowSelected) {
      rowHeading.addClass("bg-green-lt");
      rowHeading.find(".icon-tabler-check").removeClass("d-none");
      rowHeading.find(".icon-tabler-plus").addClass("d-none");
    };

    if (fullColSelected) {
      colHeading.addClass("bg-green-lt");
      colHeading.find(".icon-tabler-check").removeClass("d-none");
      colHeading.find(".icon-tabler-plus").addClass("d-none");
    };

    if (fullRowSelected && fullColSelected) {
      const allSelectedEntries = $(elem).closest("table").find("tr:not(:eq(0))").find("td:not(:eq(0))").find("button.bg-green-lt");
      const allEntries = $(elem).closest("table").find("tr:not(:eq(0))").find("td:not(:eq(0))").find("button");
      if (allEntries.length == allSelectedEntries.length) {
        totalHeading.addClass("bg-green-lt");
        totalHeading.find(".icon-tabler-check").removeClass("d-none");
        totalHeading.find(".icon-tabler-plus").addClass("d-none");
      }
    };

  }

  const unselectColRowHeading = function (elem) {
    const index = $(elem).closest("td").index();
    const rowHeading = $(elem).closest("tr").find("td:eq(0) > button");
    const colHeading = $(elem).closest("table").find("th").eq(index).find("button");
    const totalHeading = $(elem).closest("table").find("tr:eq(0)").find("button:eq(0)");
    const combinedElements = $().add(rowHeading).add(colHeading).add(totalHeading);
    combinedElements.removeClass("bg-green-lt");
    combinedElements.find(".icon-tabler-check").addClass("d-none");
    combinedElements.find(".icon-tabler-plus").removeClass("d-none");
  }

  const showCost = function () {

  }

</script>