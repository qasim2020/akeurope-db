<!-- Page header -->
<div class="page-header d-print-none">
  <div class="container-xl">
    <div class="row g-2 align-items-center">
      <div class="col">
        <!-- Page pre-title -->
        <div class="page-pretitle"> Overview </div>
        <h2 class="page-title"> Showing Administrators
        </h2>
      </div>
      <!-- Page title actions -->
      <div class="col-auto ms-auto d-print-none">
        <div class="btn-list">
          <a href="#" class="btn btn-secondary-outline d-none d-md-inline-block" onclick="toggleLayout(this)">
            <svg  xmlns="http://www.w3.org/2000/svg"  width="24"  height="24"  viewBox="0 0 24 24"  fill="none"  stroke="currentColor"  stroke-width="2"  stroke-linecap="round"  stroke-linejoin="round"  class="icon icon-tabler icons-tabler-outline icon-tabler-square-toggle-horizontal"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M22 12h-20" /><path d="M4 14v-8a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v8" /><path d="M18 20a2 2 0 0 0 2 -2" /><path d="M4 18a2 2 0 0 0 2 2" /><path d="M14 20l-4 0" /></svg>
            Toggle layout
          </a>
          <a href="#" class="btn btn-secondary-outline d-md-none btn-icon" onclick="toggleLayout(this)">
            <svg  xmlns="http://www.w3.org/2000/svg"  width="24"  height="24"  viewBox="0 0 24 24"  fill="none"  stroke="currentColor"  stroke-width="2"  stroke-linecap="round"  stroke-linejoin="round"  class="icon icon-tabler icons-tabler-outline icon-tabler-square-toggle-horizontal"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M22 12h-20" /><path d="M4 14v-8a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v8" /><path d="M18 20a2 2 0 0 0 2 -2" /><path d="M4 18a2 2 0 0 0 2 2" /><path d="M14 20l-4 0" /></svg>
          </a>
          {{#if (findInArray data.role "createUsers")}}
          <a href="#" class="btn btn-primary d-none d-md-inline-block" id="#createNewEntry" data-bs-toggle="modal" data-bs-target="#modal-new-user">
            <svg xmlns="http://www.w3.org/2000/svg" class="icon" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
              <path stroke="none" d="M0 0h24v24H0z" fill="none" />
              <path d="M12 5l0 14" />
              <path d="M5 12l14 0" />
            </svg>
            Create new user 
          </a>
          <a href="#" class="btn btn-primary d-md-none btn-icon" data-bs-toggle="modal" data-bs-target="#modal-new-entry" aria-label="modal-new-entry">
            <!-- Download SVG icon from http://tabler-icons.io/i/plus -->
            <svg xmlns="http://www.w3.org/2000/svg" class="icon" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
              <path stroke="none" d="M0 0h24v24H0z" fill="none" />
              <path d="M12 5l0 14" />
              <path d="M5 12l14 0" />
            </svg>
          </a>
          {{/if}}
        </div>
      </div>
    </div>
  </div>
</div>
<!-- Page body -->
<div class="container-xl pt-4" id="data-container">
  {{> showUsers}}
</div>

{{#if (findInArray data.role "createUsers")}}
{{> emptyUserModal}}
{{/if}}

<script>
  let newLayout = '{{data.layout}}' == 'grid' ? 'table' : 'grid'; 

  const toggleLayout = function(elem) {
    $.ajax({
      url: '/update-layout',
      method: 'POST',
      data: { layout: newLayout },
      success: function(response) {
          showData();
      },
      error: function() {
          alert("Failed to update layout.");
      }
    });
  }

  const showData = function() {
    $.ajax({
      url: '/getUsersData',
      method: 'GET',
      success: function(response) {
        newLayout = newLayout == 'grid' ? 'table' : 'grid'; 
        $("#data-container").html(response);
      },
      error: function(error) {
          alert(error.responseText);
      }
    }); 
  }


  const showDataAsSuch = function() {
    $.ajax({
      url: '/getUsersData',
      method: 'GET',
      success: function(response) {
        $("#data-container").html(response);
      },
      error: function(error) {
          alert(error.responseText);
      }
    }); 
  }

  const getEditUserModal = function(elem) {

    const userId = $(elem).attr("user-id");

    const modalExists = $(document).find(`#button-${userId}`).length > 0;
    if (modalExists) {
      return $(`#button-${userId}`).trigger("click");
    }

    $.ajax({
      url: `/getUserModal/${userId}`,
      type: 'GET',
      contentType: 'application/json', 
      success: function(response) {
        $("footer").before(response);
        $(`#button-${userId}`).trigger("click");
      },
      error: function(xhr, status, error) {
        alert(xhr.responseText);
      }
    });

  }

  const saveNewUser = function(elem) {

    const modal = $(elem).closest(".modal");

    if (!validateForm(modal)) {
      return false;
    }

    const name = $(modal).find('.name').val();
    const email = $(modal).find('.email').val();
    const role = $(modal).find('.role input:checked').val();

    let currentBtnHTML = $(elem).html();
    $(elem).html(`<span class="spinner-border spinner-border-sm" role="status"></span>`);

    $.ajax({
      url: '/users/create', 
      type: 'POST',
      contentType: 'application/json', 
      data: JSON.stringify({ name, email, role }),
      success: function(response) {
        $(elem).html(currentBtnHTML);
        $(modal).find(".modal-footer").append(`
        <div class="w-100 alert alert-success mt-4" role="alert">
          <h4 class="alert-title">Registration succesful!</h4>
          <div class="text-secondary">Email invite has been sent to ${email}</div>
        </div>`);
        showDataAsSuch();
      },
      error: function(xhr, status, error) {
        $(elem).html(currentBtnHTML);
        if (xhr.status != 400) {
          $(modal).find(".modal-footer").append(`
          <div class="w-100 alert alert-danger mt-4" role="alert">
            <h4 class="alert-title">Failed to create account!</h4>
            <div class="text-secondary">${xhr.responseText}</div>
          </div>`);
          return false;
        }
        xhr.responseJSON.forEach( val => {
          if (!val.elem) {
            $(modal).find(".modal-footer").append(`
            <div class="w-100 alert alert-danger mt-4" role="alert">
              <h4 class="alert-title">Failed to create account!</h4>
              <div class="text-secondary">${val.msg}</div>
            </div>
            `);
            return false;
          };
          $(modal).find(val.elem).addClass("is-invalid");
          $(modal).find(val.elem).siblings("span").addClass("border-red rounded-end");
          $(modal).find(val.elem).parent("div").append(`<div class="mb-2 invalid-feedback">${val.msg}</div> `);
        });
      }
    }); 
  }

  const updateUser = function(elem) {

    const modal = $(elem).closest(".modal");

    if (!validateForm(modal)) {
      return false;
    }

    const name = $(modal).find('.name').val();
    const role = $(modal).find('.role input:checked').val();
    const userId = $(elem).attr("user-id");

    let currentBtnHTML = $(elem).html();
    $(elem).html(`<span class="spinner-border spinner-border-sm" role="status"></span>`);

    $.ajax({
      url: `/users/update/${userId}`, 
      type: 'POST',
      contentType: 'application/json', 
      data: JSON.stringify({ name, role }),
      success: function(response) {
        $(elem).html(currentBtnHTML);
        $(modal).find(".modal-footer").append(`
        <div class="w-100 alert alert-success mt-4" role="alert">
          <h4 class="alert-title">Success!</h4>
          <div class="text-secondary">User updated successfully.</div>
        </div>`);
        showDataAsSuch();
      },
      error: function(xhr, status, error) {
        console.log(xhr, status, error);
        $(elem).html(currentBtnHTML);
        if (xhr.status != 400) {
          $(modal).find(".modal-footer").append(`
          <div class="w-100 alert alert-danger mt-4" role="alert">
            <h4 class="alert-title">Failed!</h4>
            <div class="text-secondary">${xhr.responseText}</div>
          </div>`);
          return false;
        }
        xhr.responseJSON.forEach( val => {
          if (!val.elem) {
            $(modal).find(".modal-footer").append(`
            <div class="w-100 alert alert-danger mt-4" role="alert">
              <h4 class="alert-title">Failed!</h4>
              <div class="text-secondary">${val.msg}</div>
            </div>
            `);
            return false;
          };
          $(modal).find(val.elem).addClass("is-invalid");
          $(modal).find(val.elem).siblings("span").addClass("border-red rounded-end");
          $(modal).find(val.elem).parent("div").append(`<div class="mb-2 invalid-feedback">${val.msg}</div> `);
        });
      }
    }); 

  }

  const validateForm = function(modal) {

    let isValid = [];

    $(modal).find("input").removeClass("is-invalid");
    $(modal).find("input").removeClass("is-valid");
    $(modal).find(".invalid-feedback").remove();
    $(modal).find("span").removeClass("border-red");
    $(modal).find("span").removeClass("rounded-end");
    $(modal).find(".alert").remove();

    $(modal).find("input").each( (key, val) => {
      if ($(val).val() == "") {
        $(val).addClass("is-invalid")
        if ($(val).siblings("span").length > 0) {
          $(val).siblings("span").after(`<div class="invalid-feedback mb-2">Invalid entry</div> `);
          $(val).siblings("span").addClass("is-invalid border-red rounded-end");
        } else {
          $(val).after(`<div class="invalid-feedback">Invalid entry</div> `);
        }
      } 
      isValid.push($(val).val() != "");
    })

    const roleRadioBtn = $(modal).find(".role input:checked");

    if ( $(roleRadioBtn).val() == undefined) {
      $(modal).find(".role").addClass("is-invalid");
      $(modal).find(".role").after(`<div class="invalid-feedback">Invalid entry</div> `);
      isValid.push(false)
    };


    if (!(isValid.every(val => val === true))) {
      return false;
    }

    return true;

  }

  const deleteUser = function(elem) {
    const userId = $(elem).attr("user-id");
    $.ajax({
      url: `/users/delete/${userId}`, 
      type: 'POST',
      contentType: 'application/json', 
      success: function(response) {
        showDataAsSuch();
      },
      error: function(xhr, status, error) {
        alert(xhr.responseText);
      }
    });
  }


  const sendEmailInvite = function(elem) {

    const userId = $(elem).attr("user-id");

    $(elem).siblings("input").removeClass("is-invalid");
    $(elem).siblings("input").addClass("is-valid");
    $(elem).siblings(".invalid-feedback").remove();
    $(elem).siblings(".alert").remove();

    let currentBtnHTML = $(elem).html();
    $(elem).html(`<span class="spinner-border spinner-border-sm" role="status"></span>`);

    $.ajax({
      url: `/users/sendInvite`, 
      type: 'POST',
      contentType: 'application/json', 
      data: JSON.stringify({ userId }),
      success: function(response) {
        $(elem).html(currentBtnHTML);
        $(elem).after(`
        <div class="w-100 alert alert-success mt-4" role="alert">
          <h4 class="alert-title">Success!</h4>
          <div class="text-secondary">Email invite sent successfully!</div>
        </div>`);
        showDataAsSuch();
      },
      error: function(xhr, status, error) {
        $(elem).html(currentBtnHTML);
        $(elem).siblings("input").addClass("is-invalid");
        $(elem).siblings("input").after(`<div class="invalid-feedback">${xhr.responseText}</div> `);
      }
    });
  }
</script>